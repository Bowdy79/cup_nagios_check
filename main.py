import json
import docker

# Sample JSON Inputs
# j = '{"images":[{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"triliumnext/notes","tag":"latest"},"reference":"triliumnext/notes:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":155,"url":"https://github.com/TriliumNext/Notes"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"vaultwarden/server","tag":"latest"},"reference":"vaultwarden/server:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":333,"url":"https://github.com/dani-garcia/vaultwarden"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"sergi0g/cup","tag":"latest"},"reference":"ghcr.io/sergi0g/cup:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":149,"url":"https://github.com/sergi0g/cup"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"jc21/nginx-proxy-manager","tag":"latest"},"reference":"jc21/nginx-proxy-manager:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":369,"url":null}],"metrics":{"major_updates":0,"minor_updates":0,"monitored_images":4,"other_updates":0,"patch_updates":0,"unknown":0,"up_to_date":4,"updates_available":0}}'
# j = '{"images":[{"in_use":true,"parts":{"registry":"lscr.io","repository":"linuxserver/nextcloud","tag":"latest"},"reference":"lscr.io/linuxserver/nextcloud:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:c784be825c7f89a884478c7a090b2f443c2855826108f2ab3c6519a2c7400c9a"],"remote_digest":"sha256:e15655676d57e9b85dbeadc8d05e8431adeb00449d345609f0aaa1e9644ddb3d","type":"digest"}},"server":null,"time":166,"url":"https://github.com/linuxserver/docker-nextcloud/packages"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"gitea/gitea","tag":"latest"},"reference":"gitea/gitea:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:724d420b64da6582b9ac8298856e4791e8a46307f31265cb2630ed0b058073ab"],"remote_digest":"sha256:8e2e3f40c5ff3fee920c6d0faac0db9cca2183d80ff23965d1022434d37e7910","type":"digest"}},"server":null,"time":167,"url":"https://github.com/go-gitea/gitea"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"alexta69/metube","tag":"latest"},"reference":"ghcr.io/alexta69/metube:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:4b0f5ac84a955c8db511d132c9a8169a528c27fceba1ec39a0740771ba287ff2"],"remote_digest":"sha256:8c9390c8a83974e233230e838d69e465aaa60e1bb2b52b5d7a4746446f05bfe6","type":"digest"}},"server":null,"time":131,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"wabayang/jelu","tag":"latest"},"reference":"wabayang/jelu:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":338,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"ckulka/baikal","tag":"nginx"},"reference":"ckulka/baikal:nginx","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:03b765952395fcc1ffc7b4bf8949e88fc15289246118c0c5f28135af7d094a46"],"remote_digest":"sha256:9068fd104044b7be96e6e74465f8ee7c1c2ecbe41be03606497e5d9beb0ef96d","type":"digest"}},"server":null,"time":423,"url":"https://hub.docker.com/r/ckulka/baikal"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"jordan-dalby/bytestash","tag":"latest"},"reference":"ghcr.io/jordan-dalby/bytestash:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":191,"url":"https://github.com/jordan-dalby/ByteStash"},{"in_use":false,"parts":{"registry":"registry-1.docker.io","repository":"library/postgres","tag":"17"},"reference":"postgres:17","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:30a72339ce74f2621f0f82cd983a11ade307ec2e634a7998318e8813a6f6f25c"],"remote_digest":"sha256:6cf6142afacfa89fb28b894d6391c7dcbf6523c33178bdc33e782b3b533a9342","type":"digest"}},"server":null,"time":587,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"library/php","tag":"apache"},"reference":"php:apache","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:4d61bb4e488819b9d6f3dc7c347e4e967193fbd6ac7a8cdb8ecf7d7c20d2c7c2"],"remote_digest":"sha256:67d471f9ce2d1185f0b30f2d89bed811e206462fb2afb0c835932338506e6a19","type":"digest"}},"server":null,"time":422,"url":null},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"paperless-ngx/paperless-ngx","tag":"latest"},"reference":"ghcr.io/paperless-ngx/paperless-ngx:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:5622c95b4e22c6b95d4791563d8ace03ae16e3147e2cdf2016b938dc9341d30a"],"remote_digest":"sha256:ab72a0ab42a792228cdbe83342b99a48acd49f7890ae54b1ae8e04401fba24ee","type":"digest"}},"server":null,"time":187,"url":"https://github.com/paperless-ngx/paperless-ngx"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"chartdb/chartdb","tag":"latest"},"reference":"ghcr.io/chartdb/chartdb:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":192,"url":"https://github.com/chartdb/chartdb"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"gethomepage/homepage","tag":"latest"},"reference":"ghcr.io/gethomepage/homepage:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":193,"url":"https://github.com/gethomepage/homepage"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"binwiederhier/ntfy","tag":"latest"},"reference":"binwiederhier/ntfy:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":412,"url":"https://ntfy.sh/"},{"in_use":false,"parts":{"registry":"registry-1.docker.io","repository":"library/redis","tag":"8"},"reference":"redis:8","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:dbf3e4b6ad3ece9c733282ff3f16942ed754fdc4ea12332154f30a9a9b88c3af"],"remote_digest":"sha256:1b835e5a8d5db58e8b718850bf43a68ef5a576fc68301fd08a789b20b4eecb61","type":"digest"}},"server":null,"time":607,"url":null},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"immich-app/immich-server","tag":"release"},"reference":"ghcr.io/immich-app/immich-server:release","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:073fc04c7e3d18ace466c20763809cf17aa55765ed610f12971b392a6a80b50c"],"remote_digest":"sha256:df5bbf4e29eff4688063a005708f8b96f13073200b4a7378f7661568459b31e9","type":"digest"}},"server":null,"time":174,"url":"https://github.com/immich-app/immich"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"adguard/adguardhome","tag":"latest"},"reference":"adguard/adguardhome:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:b04764acecf1f663a23f55e95724a3c7ca0dc7f3a6f957d29005728b6bd036f2"],"remote_digest":"sha256:320ab49bd5f55091c7da7d1232ed3875f687769d6bb5e55eb891471528e2e18f","type":"digest"}},"server":null,"time":434,"url":"https://adguard.com/en/adguard-home/overview.html"},{"in_use":false,"parts":{"registry":"registry-1.docker.io","repository":"vaultwarden/server","tag":"latest"},"reference":"vaultwarden/server:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":506,"url":"https://github.com/dani-garcia/vaultwarden"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"home-assistant/home-assistant","tag":"stable"},"reference":"ghcr.io/home-assistant/home-assistant:stable","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:8a99004ff832dbd535e6ac4d141042bc31141ff6a86b4d5bb288b3680fbceac1"],"remote_digest":"sha256:e207929bdf5dc95db43c618b877364e99f7ad506ec5440aeef80d5c9c1cae668","type":"digest"}},"server":null,"time":186,"url":"https://www.home-assistant.io/"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"sergi0g/cup","tag":"latest"},"reference":"ghcr.io/sergi0g/cup:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":191,"url":"https://github.com/sergi0g/cup"},{"in_use":true,"parts":{"registry":"ghcr.io","repository":"immich-app/immich-machine-learning","tag":"release"},"reference":"ghcr.io/immich-app/immich-machine-learning:release","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:e157e0fa0d4363b0b6bab1923adab5951bbcdb71cd9016470bc6810dae21d115"],"remote_digest":"sha256:9f2f61d86af82d04926f9b896c995c502303052905517c5485dd26bf1e42a44e","type":"digest"}},"server":null,"time":176,"url":"https://github.com/immich-app/immich"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"deconzcommunity/deconz","tag":"latest"},"reference":"deconzcommunity/deconz:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":420,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"library/couchdb","tag":"latest"},"reference":"couchdb:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:dfb99cac32d466013e2ef578d09f9831a9bc86043b1c453cf671c069902c75a1"],"remote_digest":"sha256:30c14bf9d5d1a04c0b1b9ef0442131df69624f91221b0631ab6e75dd7f99fac5","type":"digest"}},"server":null,"time":415,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"library/mysql","tag":"8"},"reference":"mysql:8","result":{"error":null,"has_update":true,"info":{"current_version":"8","new_tag":"9","new_version":"9","type":"version","version_update_type":"major"}},"server":null,"time":543,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"jc21/nginx-proxy-manager","tag":"latest"},"reference":"jc21/nginx-proxy-manager:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":572,"url":null},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"library/mariadb","tag":"latest"},"reference":"mariadb:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:fcc7fcd7114adb5d41f14d116b8aac45f94280d2babfbbb71b4782922ee6d8d4"],"remote_digest":"sha256:1e669024fc94f626b9dc48bf47b29b5339cec203c28e61a3dc372991a345daf5","type":"digest"}},"server":null,"time":576,"url":"https://github.com/MariaDB/mariadb-docker"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"library/phpmyadmin","tag":"latest"},"reference":"phpmyadmin:latest","result":{"error":null,"has_update":true,"info":{"local_digests":["sha256:73467128842bc4406372310f068bc9ccb6727a82c7b5dc9c4f3d815ead33eab8"],"remote_digest":"sha256:f74d5fcf0148dc6b726216fee80689ce6f21819051278b58c75f3f2b5367bdfe","type":"digest"}},"server":null,"time":440,"url":"https://github.com/phpmyadmin/docker#readme"},{"in_use":true,"parts":{"registry":"registry-1.docker.io","repository":"germannewsmaker/myspeed","tag":"latest"},"reference":"germannewsmaker/myspeed:latest","result":{"error":null,"has_update":false,"info":null},"server":null,"time":590,"url":null}],"metrics":{"major_updates":1,"minor_updates":0,"monitored_images":26,"other_updates":15,"patch_updates":0,"unknown":0,"up_to_date":10,"updates_available":16}}'

# Connect to docker to load JSON
client = docker.DockerClient(base_url='unix://var/run/docker.sock')
v = {'/var/run/docker.sock': {'bind':'/var/run/docker.sock', 'mode':'ro'}}
j = client.containers.run('ghcr.io/sergi0g/cup', volumes=v, detach=False, stdout=True, command='check -r')

jsonDump = json.loads(j)

class Image:
    in_use = False
    parts = []
    reference = ""
    result = []
    server = ""
    time = 0
    url = ""
    nagios_exit_code = 3
    nagios_short_message = "UNKNOWN - Error while checking for updates!"
    nagios_long_message = ""

    def __init__(self, imageJson):
        self.in_use = imageJson['in_use']
        self.parts = imageJson['parts']
        self.reference = imageJson['reference']
        self.result = imageJson['result']
        self.server = imageJson['server']
        self.time = imageJson['time']
        self.url = imageJson['url']
        if self.result['has_update']:
            self.nagios_exit_code = 1
            self.nagios_short_message = "WARNING - Container image updates available!"
            self.nagios_long_message = f"{self.parts['repository']} - {self.url}"
        else:
            self.nagios_exit_code = 0
            self.nagios_short_message = "OK - All containers up to date."

containers = []
updates_available = 0

for i in jsonDump['images']:
    imageObj = Image(i)
    containers.append(imageObj)
   
highest_exit_code = 0
highest_short_message = ""
highest_long_messages = []

for h in containers:
    if h.nagios_exit_code > highest_exit_code:
        highest_exit_code = h.nagios_exit_code
        highest_short_message = h.nagios_short_message
    if h.nagios_exit_code > 0:
        highest_long_messages.append(h.nagios_long_message)

print(highest_short_message)
for lm in highest_long_messages:
    print(lm)
exit(highest_exit_code)